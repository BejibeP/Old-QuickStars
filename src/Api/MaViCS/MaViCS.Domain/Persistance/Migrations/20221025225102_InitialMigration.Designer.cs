// <auto-generated />
using System;
using MaViCS.Domain.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaViCS.Domain.Persistance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221025225102_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MaViCS.Domain.Models.Show", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Application");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 25, 22, 51, 2, 25, DateTimeKind.Utc).AddTicks(6064));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("TourId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TourId");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Application",
                            CreatedOn = new DateTime(2022, 10, 25, 22, 51, 2, 27, DateTimeKind.Utc).AddTicks(8486),
                            Date = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1L,
                            TourId = 1L
                        });
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Talent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Application");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 25, 22, 51, 2, 23, DateTimeKind.Utc).AddTicks(1416));

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("HomeTownId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HomeTownId");

                    b.ToTable("Talents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Application",
                            CreatedOn = new DateTime(2022, 10, 25, 22, 51, 2, 27, DateTimeKind.Utc).AddTicks(8450),
                            HomeTownId = 1L,
                            Name = "Gura",
                            Surname = "Gawr",
                            Title = "Shark-Girl Idol"
                        });
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Tour", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Application");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 25, 22, 51, 2, 24, DateTimeKind.Utc).AddTicks(3753));

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("TalentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TalentId");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Application",
                            CreatedOn = new DateTime(2022, 10, 25, 22, 51, 2, 27, DateTimeKind.Utc).AddTicks(8468),
                            Name = "Shark First Concert",
                            StartedOn = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TalentId = 1L
                        });
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Town", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Application");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 25, 22, 51, 2, 23, DateTimeKind.Utc).AddTicks(317));

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(7, 4)
                        .HasColumnType("decimal(7,4)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(7, 4)
                        .HasColumnType("decimal(7,4)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Towns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "Application",
                            CreatedOn = new DateTime(2022, 10, 25, 22, 51, 2, 27, DateTimeKind.Utc).AddTicks(8263),
                            Description = "A Sunken city",
                            Latitude = 0m,
                            Longitude = 0m,
                            Name = "Atlantis",
                            Region = "Ocean"
                        });
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Show", b =>
                {
                    b.HasOne("MaViCS.Domain.Models.Town", "Location")
                        .WithMany("Shows")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MaViCS.Domain.Models.Tour", "Tour")
                        .WithMany("Shows")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Talent", b =>
                {
                    b.HasOne("MaViCS.Domain.Models.Town", "HomeTown")
                        .WithMany("Talents")
                        .HasForeignKey("HomeTownId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HomeTown");
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Tour", b =>
                {
                    b.HasOne("MaViCS.Domain.Models.Talent", "Talent")
                        .WithMany("Tours")
                        .HasForeignKey("TalentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Talent");
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Talent", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Tour", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("MaViCS.Domain.Models.Town", b =>
                {
                    b.Navigation("Shows");

                    b.Navigation("Talents");
                });
#pragma warning restore 612, 618
        }
    }
}
